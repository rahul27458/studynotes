var cluster = require('cluster')
  , underscore_string = require('underscore.string')

/* Make all the underscore.string functions available.
 * For documentation, see: https://github.com/epeli/underscore.string#readme
 */

module.exports = exports = underscore_string

/**
 * Log a message
 *
 * @arguments Stuff to log
 */

exports.log = function (/* ... */) {
  var args = Array.prototype.slice.call(arguments, 0)
  if (cluster.isWorker) {
    args.unshift('[' + cluster.worker.id + ']')
  }
  console.log.apply(console.log, args)
}

/**
 * Log an error
 *
 * @arguments Stuff to log
 */

exports.error = function (/* ... */) {
  var args = Array.prototype.slice.call(arguments, 0)
  if (cluster.isWorker) {
    args.unshift('[' + cluster.worker.id + ']')
  }
  args.unshift('ERROR:')
  console.error.apply(console.error, args)
}

/**
 * For convenience, add log() and error() to the global object.
 * Do not use this option in reusable node packages.
 */
exports.easyLog = function () {
  global.log = exports.log
  global.error = exports.error
}

/**
 * Convert a string into a URL slug by removing non-URL friendly
 * characters and replacing spaces with dashes.
 *
 * @param  {String} v
 * @return {String} URL slug
 */

exports.slugify = function (v) {
  var str = (v || '')
  .toLowerCase()
  .replace(/[^-a-z0-9 ]/g, '')
  .replace(/\s+/g, '-')

  return util.trim(str, '-')
}

/**
 * Convert arguments into a dash-separated String for use in page titles
 *
 * @arguments {String} Page title components
 * @return Dash-separated String
 */

exports.titleify = function (/* ... */) {
  var args = Array.prototype.slice.call(arguments, 0)
  return args.join(' - ')
}

/**
 * Add commas to an integer, so that it's easier to read.
 * @param {Integer} x The number
 * @return {String} The number with commas
 */

exports.addCommasToInteger = function (x) {
  x += '' // convert to String
  var rgx = /(\d+)(\d{3})/

  while (rgx.test(x)) {
    x = x.replace(rgx, '$1' + ',' + '$2')
  }
  return x
}

/**
 * Function that does nothing.
 */

exports.noop = function() {}

/**
 * Escape a string to be included in a regular expression.
 *
 * From https://developer.mozilla.org/en-US/docs/JavaScript/Guide/Regular_Expressions
 *
 * @param  {String} str
 * @return {String}
 */

exports.escapeRegExp = function(str) {
  return str.replace(/([.*+?^=!:${}()|[\]\/\\])/g, "\\$1")
}

/**
 * Generates a random globally unique identifier (GUID).
 *
 * From: http://stackoverflow.com/a/2117523
 *
 * @return {String} new GUID
 */

exports.generateGUID = function () {
  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
    var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8)
    return v.toString(16)
  })
}
